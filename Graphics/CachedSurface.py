__author__ = 'User'

# TODO: Can try to cache location

'''
Caches a surface that is generated by a method
params:
    surface factory - A parameter-less method that returns a surface
'''
class CachedSurface:
    def __init__(self, surface_factory):
        self.factory = surface_factory

        self.cache = True
        self.update_cache = False
        # Can be used to implement "memory" for cached surface
        self.max_history = 1

        self.surface = None

    # Returns a copy of the surface
    def get_surface(self):
        if not self.cache:
            return self.factory()

        # Update cache
        if self.update_cache or self.surface is None:
            self.surface = self.factory()
            self.update_cache = False

        return self.surface.copy()

    # Called when the surface needs to be resized
    def update_cache(self):
        self.update_cache = True

    # Possible optimization for resizing
    def resize_cache(self):
        pass
